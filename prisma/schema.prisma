generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String        @id @default(cuid())
  email                  String        @unique
  name                   String?
  password               String?
  createdAt              DateTime      @default(now())
  updatedAt              DateTime      @updatedAt
  profileImage           String?
  role                   Role          @default(USER)
  isSubscribed           Boolean       @default(false)
  stripeCurrentPeriodEnd DateTime?
  stripeCustomerId       String?
  stripePriceId          String?
  stripeSubscriptionId   String?
  subscription           Subscription?
  videos                 Video[]
}

model Subscription {
  id                     String            @id @default(cuid())
  userId                 String            @unique
  plan                   String
  status                 String
  startDate              DateTime          @default(now())
  endDate                DateTime?
  minutesAllowed         Int
  minutesUsed            Int               @default(0)
  stripeCustomerId       String?
  stripeSubscriptionId   String?
  planId                 String?
  stripeCurrentPeriodEnd DateTime?
  stripePriceId          String?
  subscriptionPlan       SubscriptionPlan? @relation(fields: [planId], references: [id])
  user                   User              @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model SubscriptionPlan {
  id                    String         @id @default(cuid())
  name                  String
  description           String
  monthlyPrice          Float
  yearlyPrice           Float
  features              String[]
  minutesAllowed        Int
  maxFileSize           Int
  maxConcurrentRequests Int
  storageDuration       Int
  isActive              Boolean        @default(true)
  createdAt             DateTime       @default(now())
  updatedAt             DateTime       @updatedAt
  stripePriceId         String?
  subscriptions         Subscription[]
}

model Video {
  id          String    @id @default(cuid())
  userId      String
  title       String
  description String?
  originalUrl String
  duration    Int
  fileSize    Int
  uploadedAt  DateTime  @default(now())
  status      String
  processedAt DateTime?
  uploadPath  String
  error       String?
  clips       Clip[]
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Clip {
  id                String   @id @default(cuid())
  videoId           String
  title             String?
  url               String
  startTime         Float
  endTime           Float
  duration          Float
  reason            String?  // Reason for clip extraction
  createdAt         DateTime @default(now())
  externalId        String?  // Id from external API
  externalCreatedAt DateTime?
  filename          String
  withCaptions      Boolean  @default(false)
  hasSrt            Boolean  @default(false)
  hasWordTimestamps Boolean  @default(false)
  
  // Subtitle information
  subtitleUrl       String?
  subtitleId        String?
  subtitleFormat    String?
  
  // Word timestamp information
  wordTimestampUrl  String?
  wordTimestampId   String?
  wordTimestampFormat String?
  
  video             Video    @relation(fields: [videoId], references: [id], onDelete: Cascade)
}

model BrandingSettings {
  id           String   @id @default(cuid())
  siteName     String   @default("Reels Creator")
  logoUrl      String?
  logoPath     String?
  faviconUrl   String?
  faviconPath  String?
  primaryColor String   @default("#8B5CF6")
  accentColor  String   @default("#F59E0B")
  defaultFont  String   @default("Poppins")
  updatedAt    DateTime @updatedAt
  createdAt    DateTime @default(now())
}

model AppSettings {
  id                    String   @id @default(cuid())
  // General settings
  userRegistration      Boolean  @default(true)
  maxUploadSize         Int      @default(500) // In MB
  defaultVideoQuality   String   @default("720p")
  defaultLanguage       String   @default("en")
  enableEmailNotifications Boolean @default(true)
  maintenanceMode       Boolean  @default(false)
  
  // Email settings
  fromEmail             String   @default("noreply@reelscreator.com")
  smtpHost              String?
  smtpPort              String?
  smtpUsername          String?
  smtpPassword          String?
  enableSMTP            Boolean  @default(false)
  
  // Subscription settings
  trialPeriod           Int      @default(14) // In days
  defaultPlan           String   @default("basic")
  enableRecurring       Boolean  @default(true)
  gracePeriod           Int      @default(3) // In days
  allowCancellation     Boolean  @default(true)
  
  // Stripe settings
  stripePublishableKey  String?
  stripeSecretKey       String?
  stripeWebhookSecret   String?
  stripeLiveMode        Boolean  @default(false)
  
  // Privacy settings
  privacyPolicy         String?  @db.Text
  termsOfService        String?  @db.Text
  cookiePolicy          String?  @db.Text
  dataRetentionDays     Int      @default(90)
  allowDataExport       Boolean  @default(true)
  
  // Storage settings
  storageProvider       String   @default("local")
  s3BucketName          String?
  s3AccessKey           String?
  s3SecretKey           String?
  s3Region              String?
  maxStorageGB          Int      @default(50)
  
  updatedAt             DateTime @updatedAt
  createdAt             DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}
